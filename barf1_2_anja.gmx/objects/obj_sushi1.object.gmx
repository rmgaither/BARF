<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sushi1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*phy_position_x = room_width -32;
phy_position_y = -10;
physics_apply_impulse(x, y, 0, 6);*/


phy_position_x = - 10;
phy_position_y = 32;
physics_apply_impulse(x, y, 6, 0);
alreadymoving = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//vectormath
beltspd = 5;
beltangle = - other.image_angle;

if beltangle = 0
    {
    beltx = beltspd;
    belty = 0;
    }
else if beltangle &gt; 0 &amp;&amp; beltangle &lt; 90
    {
    angle = beltangle
    beltx = beltspd * darccos(angle);
    belty =  - (sqrt(sqr(beltspd) - sqr(beltx)));
    }
else if beltangle = 90
    {
    beltx = 0;
    belty = - beltspd;
    }
else if beltangle &gt; 90 &amp;&amp; beltangle &lt; 180
    {
    angle = 180 - beltangle
    beltx = - (beltspd * darccos(angle));
    belty = - (sqrt(sqr(beltspd) - sqr(beltx)));
    }
else if beltangle = 180
    {
    beltx = -beltspd;
    belty = 0;
    }
else if beltangle &gt; 180 &amp;&amp; beltangle &lt; 270
    {
    angle = beltangle - 180;
    beltx =  - (beltspd * darccos(angle));
    belty = sqrt(sqr(beltspd) - sqr(beltx));
    }
else if beltangle = 270
    {
    beltx = 0;
    belty = beltspd;
    }
else if beltangle &gt; 270 &amp;&amp; beltangle &lt; 360
    {
    angle = 360 - beltangle;
    beltx = beltspd * darccos(angle);
    belty = sqrt(sqr(beltspd) - sqr(beltx));
    }


if instance_place(x, y, obj_belt) 
    {
    physics_apply_force(x, y, beltx, belty);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_belt">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//beltspd = 0.5;




/*physics_apply_impulse(x, y, lengthdir_x(beltspd, point_direction(obj_belt_start.x, obj_belt_start.y,        //x, y where impulse will be applied, direction of vector(x, y)
                                                                 obj_belt_end.x, obj_belt_end.y)), 
                            lengthdir_y(beltspd, point_direction(obj_belt_start.x, obj_belt_start.y, 
                                                                obj_belt_end.x, obj_belt_end.y)));*/
                                                                
//physics_apply_impulse(x, y, other.y, 0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.699999988079071</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.200000002980232</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,0</point>
    <point>16,16</point>
    <point>0,16</point>
  </PhysicsShapePoints>
</object>
